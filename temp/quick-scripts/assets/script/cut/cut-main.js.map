{"version":3,"sources":["cut-main.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/script/cut","sourcesContent":["import Item from \"./cut-item\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Main extends cc.Component {\n\n    @property(cc.Graphics)\n    draw: cc.Graphics = undefined;\n\n    @property(cc.Node)\n    gameLayer: cc.Node = undefined;\n\n    onLoad () {\n        this.registerEvent();\n    }\n\n    registerEvent () {\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (e) => {\n            this.draw.clear();\n            const startPoint = e.getStartLocation();\n            this.draw.moveTo(startPoint.x, startPoint.y);\n            this.draw.lineTo(e.getLocationX(), e.getLocationY());\n            this.draw.stroke();\n        }, this);\n\n        this.node.on(cc.Node.EventType.TOUCH_END, (e) => {\n            this.draw.clear();\n            const p1 = e.getStartLocation();\n            const p2 = e.getLocation();\n            this.cut(p1, p2);\n        }, this);\n    }\n\n    cut (point1, point2) {\n        const result1 = cc.director.getPhysicsManager().rayCast(point1, point2, cc.RayCastType.Closest);\n        const result2 = cc.director.getPhysicsManager().rayCast(point2, point1, cc.RayCastType.Closest);\n        if (result1.length === 0 || result2.length === 0) {\n            cc.warn('无碰撞体');\n            return;\n        }\n        if (result1[0].collider !== result2[0].collider) {\n            cc.warn('不是单独碰撞体');\n            return;\n        }\n        if (!(result1[0].collider instanceof cc.PhysicsPolygonCollider)) {\n            cc.warn('非多边形物理碰撞盒无points属性');\n            return;\n        }\n        // 将单独的碰撞体分割成两块，利用点是否在线上判断\n        const collider = result1[0].collider;\n        let localPoint1 = cc.Vec2.ZERO;\n        let localPoint2 = cc.Vec2.ZERO;\n        collider.body.getLocalPoint(result1[0].point, localPoint1);\n        collider.body.getLocalPoint(result2[0].point, localPoint2);\n        const points = collider.points;\n        let index1 = undefined;\n        let index2 = undefined;\n        for (let i = 0; i < points.length; i++) {\n            let p1 = points[i];\n            let p2 = i === points.length - 1 ? points[0] : points[i + 1];\n            if (this.pointInLine(localPoint1, p1, p2)) {\n                index1 = i;\n            }\n            if (this.pointInLine(localPoint2, p1, p2)) {\n                index2 = i;\n            }\n            if (index1 !== undefined && index2 !== undefined) {\n                break;\n            }\n        }\n        cc.log(`点1下标${index1}`);\n        cc.log(`点2下标${index2}`);\n        // 一次循环，装入两个点数组\n        const array1 = [];\n        const array2 = [];\n        // 碰到 index1 或 index2 标志\n        let time = 0;\n        for (let i = 0; i < points.length; i++) {\n            let temp = points[i].clone();\n            if (time === 0) {\n                array1.push(temp);\n            } else {\n                array2.push(temp);\n            }\n            if ((i === index1 || i === index2) && time === 0) {\n                array1.push(i === index1 ? localPoint1.clone() : localPoint2.clone());\n                array2.push(i === index1 ? localPoint1.clone() : localPoint2.clone());\n                time = 1;\n            } else if ((i === index1 || i === index2) && time === 1) {\n                array2.push(i === index1 ? localPoint1.clone() : localPoint2.clone());\n                array1.push(i === index1 ? localPoint1.clone() : localPoint2.clone());\n                time = 0;\n            }\n        }\n        cc.log(array1,array2);\n        // 设置第一个碰撞体\n        collider.points = array1;\n        collider.apply();\n        collider.node.getComponent(Item).draw();\n        // 克隆一个本体作为第二个\n        const cloneNode = cc.instantiate(collider.node);\n        this.gameLayer.addChild(cloneNode);\n        const comp = cloneNode.getComponent(cc.PhysicsPolygonCollider);\n        comp.points = array2;\n        comp.apply();\n        cloneNode.getComponent(Item).draw();\n    }\n\n    /** 近似判断点在线上 */\n    pointInLine (point, start, end) {\n        const dis = 1;\n        return cc.Intersection.pointLineDistance(point, start, end, true) < dis;\n    }\n\n}\n"]}